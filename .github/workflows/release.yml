name: Build & Release EXIF Photo Organizer

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build Executable
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full repo history for tagging

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: pip install poetry

      - name: Install Dependencies
        run: poetry install

      - name: Install PyInstaller
        run: poetry add --dev pyinstaller

      - name: Build Executable
        run: |
          poetry run pyinstaller --onefile --name exif-photo-organizer update_exif.py

      - name: Upload Executable Artifact
        uses: actions/upload-artifact@v4
        with:
          name: exif-photo-organizer
          path: dist/exif-photo-organizer*

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # REQUIRED for pushing tags

      - name: Get Version Tag
        id: get_tag
        run: |
          echo "Generating new tag..."
          echo "TAG_NAME=v1.0.$(date +%s)" >> $GITHUB_ENV
          echo "Generated tag: $TAG_NAME"

      - name: Configure Git User
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Debug Git Remote
        run: |
          echo "Checking Git Remote URL..."
          git remote -v

      - name: Authenticate & Push Git Tag
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          echo "Setting Git Remote with PAT..."
          git remote set-url origin https://$GH_PAT@github.com/${{ github.repository }}
          git tag $TAG_NAME
          git push origin $TAG_NAME || (echo "‚ùå Failed to push tag"; exit 1)

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: exif-photo-organizer
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: dist/exif-photo-organizer*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}  # Make sure to use GH_PAT